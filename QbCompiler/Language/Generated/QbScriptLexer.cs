//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from G:\Development\QbCompiler\QbCompiler\grammars\QbScript.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace QbScript.Language {
using System;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public partial class QbScriptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		WS=25, RWORD=26, HEXINT=27, DECIMAL=28, EXPONENT=29, ID=30, CHECKSUM=31, 
		NSTRING=32, WSTRING=33, INT=34, FLOAT=35;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "WS", "RWORD", 
		"LETTER", "DIGIT", "HEXINT", "HEXDIGIT", "DECIMAL", "EXPONENT", "ID", 
		"CHECKSUM", "NSTRING", "WSTRING", "INT", "FLOAT"
	};


	public QbScriptLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'_'", "'('", "','", "')'", "'{'", "'}'", "'='", "';'", "'int'", 
		"'float'", "'string'", "'wstring'", "'vec2'", "'vec3'", "'struct'", "'array'", 
		"'<'", "'>'", "'qbkey'", "'qbkeyref'", "'stringptr'", "'qbkeystringqs'", 
		"'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "WS", "RWORD", "HEXINT", "DECIMAL", "EXPONENT", "ID", "CHECKSUM", 
		"NSTRING", "WSTRING", "INT", "FLOAT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "QbScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	static QbScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static string _serializedATN = _serializeATN();
	private static string _serializeATN()
	{
	    StringBuilder sb = new StringBuilder();
	    sb.Append("\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2%\x165");
		sb.Append("\b\x1\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6");
		sb.Append("\x4\a\t\a\x4\b\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r");
		sb.Append("\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10\t\x10\x4\x11\t\x11\x4\x12");
		sb.Append("\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15\x4\x16\t\x16\x4");
		sb.Append("\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B\t\x1B");
		sb.Append("\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t ");
		sb.Append("\x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x3\x2");
		sb.Append("\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a");
		sb.Append("\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v");
		sb.Append("\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r");
		sb.Append("\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE");
		sb.Append("\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3");
		sb.Append("\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11");
		sb.Append("\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3");
		sb.Append("\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15");
		sb.Append("\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3");
		sb.Append("\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17");
		sb.Append("\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3");
		sb.Append("\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A");
		sb.Append("\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3");
		sb.Append("\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B");
		sb.Append("\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3");
		sb.Append("\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B");
		sb.Append("\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3");
		sb.Append("\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B");
		sb.Append("\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x5\x1B\xFB\n\x1B\x3\x1C");
		sb.Append("\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x5\x1E\x105");
		sb.Append("\n\x1E\x3\x1E\x6\x1E\x108\n\x1E\r\x1E\xE\x1E\x109\x3\x1F\x6");
		sb.Append("\x1F\x10D\n\x1F\r\x1F\xE\x1F\x10E\x3 \x3 \x6 \x113\n \r \xE");
		sb.Append(" \x114\x3!\x3!\x5!\x119\n!\x3!\x6!\x11C\n!\r!\xE!\x11D\x3\"");
		sb.Append("\x3\"\x3\"\x3\"\a\"\x124\n\"\f\"\xE\"\x127\v\"\x3#\x3#\x3#\x3");
		sb.Append("#\x3#\x3#\x3#\x3#\x3#\x3#\x3$\x3$\x3$\x3$\a$\x137\n$\f$\xE$");
		sb.Append("\x13A\v$\x3$\x3$\x3%\x3%\x3%\a%\x141\n%\f%\xE%\x144\v%\x3%\x3");
		sb.Append("%\x3&\x5&\x149\n&\x3&\x6&\x14C\n&\r&\xE&\x14D\x3\'\x5\'\x151");
		sb.Append("\n\'\x3\'\a\'\x154\n\'\f\'\xE\'\x157\v\'\x3\'\x3\'\x5\'\x15B");
		sb.Append("\n\'\x3\'\x6\'\x15E\n\'\r\'\xE\'\x15F\x3\'\x3\'\x5\'\x164\n");
		sb.Append("\'\x2\x2(\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF\t\x11\n\x13\v\x15");
		sb.Append("\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x11!\x12#\x13%\x14\'\x15");
		sb.Append(")\x16+\x17-\x18/\x19\x31\x1A\x33\x1B\x35\x1C\x37\x2\x39\x2;");
		sb.Append("\x1D=\x2?\x1E\x41\x1F\x43 \x45!G\"I#K$M%\x3\x2\n\x5\x2\v\f\xF");
		sb.Append("\xF\"\"\x4\x2\x43\\\x63|\x3\x2\x32;\x5\x2\x32;\x43H\x63h\x4");
		sb.Append("\x2GGgg\x4\x2--//\x5\x2\f\f\xF\xF))\x5\x2\f\f\xF\xF$$\x17E\x2");
		sb.Append("\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2");
		sb.Append("\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2");
		sb.Append("\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17");
		sb.Append("\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3");
		sb.Append("\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2");
		sb.Append("\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2");
		sb.Append("\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2");
		sb.Append("\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2?\x3\x2");
		sb.Append("\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2");
		sb.Append("\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2");
		sb.Append("\x2\x2\x3O\x3\x2\x2\x2\x5Q\x3\x2\x2\x2\aS\x3\x2\x2\x2\tU\x3");
		sb.Append("\x2\x2\x2\vW\x3\x2\x2\x2\rY\x3\x2\x2\x2\xF[\x3\x2\x2\x2\x11");
		sb.Append("]\x3\x2\x2\x2\x13_\x3\x2\x2\x2\x15\x63\x3\x2\x2\x2\x17i\x3\x2");
		sb.Append("\x2\x2\x19p\x3\x2\x2\x2\x1Bx\x3\x2\x2\x2\x1D}\x3\x2\x2\x2\x1F");
		sb.Append("\x82\x3\x2\x2\x2!\x89\x3\x2\x2\x2#\x8F\x3\x2\x2\x2%\x91\x3\x2");
		sb.Append("\x2\x2\'\x93\x3\x2\x2\x2)\x99\x3\x2\x2\x2+\xA2\x3\x2\x2\x2-");
		sb.Append("\xAC\x3\x2\x2\x2/\xBA\x3\x2\x2\x2\x31\xBC\x3\x2\x2\x2\x33\xBE");
		sb.Append("\x3\x2\x2\x2\x35\xFA\x3\x2\x2\x2\x37\xFC\x3\x2\x2\x2\x39\xFE");
		sb.Append("\x3\x2\x2\x2;\x104\x3\x2\x2\x2=\x10C\x3\x2\x2\x2?\x110\x3\x2");
		sb.Append("\x2\x2\x41\x116\x3\x2\x2\x2\x43\x11F\x3\x2\x2\x2\x45\x128\x3");
		sb.Append("\x2\x2\x2G\x132\x3\x2\x2\x2I\x13D\x3\x2\x2\x2K\x148\x3\x2\x2");
		sb.Append("\x2M\x150\x3\x2\x2\x2OP\a\x61\x2\x2P\x4\x3\x2\x2\x2QR\a*\x2");
		sb.Append("\x2R\x6\x3\x2\x2\x2ST\a.\x2\x2T\b\x3\x2\x2\x2UV\a+\x2\x2V\n");
		sb.Append("\x3\x2\x2\x2WX\a}\x2\x2X\f\x3\x2\x2\x2YZ\a\x7F\x2\x2Z\xE\x3");
		sb.Append("\x2\x2\x2[\\\a?\x2\x2\\\x10\x3\x2\x2\x2]^\a=\x2\x2^\x12\x3\x2");
		sb.Append("\x2\x2_`\ak\x2\x2`\x61\ap\x2\x2\x61\x62\av\x2\x2\x62\x14\x3");
		sb.Append("\x2\x2\x2\x63\x64\ah\x2\x2\x64\x65\an\x2\x2\x65\x66\aq\x2\x2");
		sb.Append("\x66g\a\x63\x2\x2gh\av\x2\x2h\x16\x3\x2\x2\x2ij\au\x2\x2jk\a");
		sb.Append("v\x2\x2kl\at\x2\x2lm\ak\x2\x2mn\ap\x2\x2no\ai\x2\x2o\x18\x3");
		sb.Append("\x2\x2\x2pq\ay\x2\x2qr\au\x2\x2rs\av\x2\x2st\at\x2\x2tu\ak\x2");
		sb.Append("\x2uv\ap\x2\x2vw\ai\x2\x2w\x1A\x3\x2\x2\x2xy\ax\x2\x2yz\ag\x2");
		sb.Append("\x2z{\a\x65\x2\x2{|\a\x34\x2\x2|\x1C\x3\x2\x2\x2}~\ax\x2\x2");
		sb.Append("~\x7F\ag\x2\x2\x7F\x80\a\x65\x2\x2\x80\x81\a\x35\x2\x2\x81\x1E");
		sb.Append("\x3\x2\x2\x2\x82\x83\au\x2\x2\x83\x84\av\x2\x2\x84\x85\at\x2");
		sb.Append("\x2\x85\x86\aw\x2\x2\x86\x87\a\x65\x2\x2\x87\x88\av\x2\x2\x88");
		sb.Append(" \x3\x2\x2\x2\x89\x8A\a\x63\x2\x2\x8A\x8B\at\x2\x2\x8B\x8C\a");
		sb.Append("t\x2\x2\x8C\x8D\a\x63\x2\x2\x8D\x8E\a{\x2\x2\x8E\"\x3\x2\x2");
		sb.Append("\x2\x8F\x90\a>\x2\x2\x90$\x3\x2\x2\x2\x91\x92\a@\x2\x2\x92&");
		sb.Append("\x3\x2\x2\x2\x93\x94\as\x2\x2\x94\x95\a\x64\x2\x2\x95\x96\a");
		sb.Append("m\x2\x2\x96\x97\ag\x2\x2\x97\x98\a{\x2\x2\x98(\x3\x2\x2\x2\x99");
		sb.Append("\x9A\as\x2\x2\x9A\x9B\a\x64\x2\x2\x9B\x9C\am\x2\x2\x9C\x9D\a");
		sb.Append("g\x2\x2\x9D\x9E\a{\x2\x2\x9E\x9F\at\x2\x2\x9F\xA0\ag\x2\x2\xA0");
		sb.Append("\xA1\ah\x2\x2\xA1*\x3\x2\x2\x2\xA2\xA3\au\x2\x2\xA3\xA4\av\x2");
		sb.Append("\x2\xA4\xA5\at\x2\x2\xA5\xA6\ak\x2\x2\xA6\xA7\ap\x2\x2\xA7\xA8");
		sb.Append("\ai\x2\x2\xA8\xA9\ar\x2\x2\xA9\xAA\av\x2\x2\xAA\xAB\at\x2\x2");
		sb.Append("\xAB,\x3\x2\x2\x2\xAC\xAD\as\x2\x2\xAD\xAE\a\x64\x2\x2\xAE\xAF");
		sb.Append("\am\x2\x2\xAF\xB0\ag\x2\x2\xB0\xB1\a{\x2\x2\xB1\xB2\au\x2\x2");
		sb.Append("\xB2\xB3\av\x2\x2\xB3\xB4\at\x2\x2\xB4\xB5\ak\x2\x2\xB5\xB6");
		sb.Append("\ap\x2\x2\xB6\xB7\ai\x2\x2\xB7\xB8\as\x2\x2\xB8\xB9\au\x2\x2");
		sb.Append("\xB9.\x3\x2\x2\x2\xBA\xBB\a]\x2\x2\xBB\x30\x3\x2\x2\x2\xBC\xBD");
		sb.Append("\a_\x2\x2\xBD\x32\x3\x2\x2\x2\xBE\xBF\t\x2\x2\x2\xBF\xC0\x3");
		sb.Append("\x2\x2\x2\xC0\xC1\b\x1A\x2\x2\xC1\x34\x3\x2\x2\x2\xC2\xC3\a");
		sb.Append("k\x2\x2\xC3\xFB\ah\x2\x2\xC4\xC5\ag\x2\x2\xC5\xC6\an\x2\x2\xC6");
		sb.Append("\xC7\au\x2\x2\xC7\xFB\ag\x2\x2\xC8\xC9\ag\x2\x2\xC9\xCA\an\x2");
		sb.Append("\x2\xCA\xCB\ak\x2\x2\xCB\xFB\ah\x2\x2\xCC\xCD\ag\x2\x2\xCD\xCE");
		sb.Append("\an\x2\x2\xCE\xCF\au\x2\x2\xCF\xD0\ag\x2\x2\xD0\xD1\ak\x2\x2");
		sb.Append("\xD1\xFB\ah\x2\x2\xD2\xD3\at\x2\x2\xD3\xD4\ag\x2\x2\xD4\xD5");
		sb.Append("\ar\x2\x2\xD5\xD6\ag\x2\x2\xD6\xD7\a\x63\x2\x2\xD7\xFB\av\x2");
		sb.Append("\x2\xD8\xD9\au\x2\x2\xD9\xDA\ay\x2\x2\xDA\xDB\ak\x2\x2\xDB\xDC");
		sb.Append("\av\x2\x2\xDC\xDD\a\x65\x2\x2\xDD\xFB\aj\x2\x2\xDE\xDF\a\x65");
		sb.Append("\x2\x2\xDF\xE0\a\x63\x2\x2\xE0\xE1\au\x2\x2\xE1\xFB\ag\x2\x2");
		sb.Append("\xE2\xE3\a\x66\x2\x2\xE3\xE4\ag\x2\x2\xE4\xE5\ah\x2\x2\xE5\xE6");
		sb.Append("\a\x63\x2\x2\xE6\xE7\aw\x2\x2\xE7\xE8\an\x2\x2\xE8\xFB\av\x2");
		sb.Append("\x2\xE9\xEA\ai\x2\x2\xEA\xEB\aq\x2\x2\xEB\xEC\av\x2\x2\xEC\xED");
		sb.Append("\aq\x2\x2\xED\xEE\a\x61\x2\x2\xEE\xEF\at\x2\x2\xEF\xF0\a\x63");
		sb.Append("\x2\x2\xF0\xF1\ap\x2\x2\xF1\xF2\a\x66\x2\x2\xF2\xF3\aq\x2\x2");
		sb.Append("\xF3\xFB\ao\x2\x2\xF4\xF5\au\x2\x2\xF5\xF6\a\x65\x2\x2\xF6\xF7");
		sb.Append("\at\x2\x2\xF7\xF8\ak\x2\x2\xF8\xF9\ar\x2\x2\xF9\xFB\av\x2\x2");
		sb.Append("\xFA\xC2\x3\x2\x2\x2\xFA\xC4\x3\x2\x2\x2\xFA\xC8\x3\x2\x2\x2");
		sb.Append("\xFA\xCC\x3\x2\x2\x2\xFA\xD2\x3\x2\x2\x2\xFA\xD8\x3\x2\x2\x2");
		sb.Append("\xFA\xDE\x3\x2\x2\x2\xFA\xE2\x3\x2\x2\x2\xFA\xE9\x3\x2\x2\x2");
		sb.Append("\xFA\xF4\x3\x2\x2\x2\xFB\x36\x3\x2\x2\x2\xFC\xFD\t\x3\x2\x2");
		sb.Append("\xFD\x38\x3\x2\x2\x2\xFE\xFF\t\x4\x2\x2\xFF:\x3\x2\x2\x2\x100");
		sb.Append("\x101\a\x32\x2\x2\x101\x105\aZ\x2\x2\x102\x103\a\x32\x2\x2\x103");
		sb.Append("\x105\az\x2\x2\x104\x100\x3\x2\x2\x2\x104\x102\x3\x2\x2\x2\x105");
		sb.Append("\x107\x3\x2\x2\x2\x106\x108\x5=\x1F\x2\x107\x106\x3\x2\x2\x2");
		sb.Append("\x108\x109\x3\x2\x2\x2\x109\x107\x3\x2\x2\x2\x109\x10A\x3\x2");
		sb.Append("\x2\x2\x10A<\x3\x2\x2\x2\x10B\x10D\t\x5\x2\x2\x10C\x10B\x3\x2");
		sb.Append("\x2\x2\x10D\x10E\x3\x2\x2\x2\x10E\x10C\x3\x2\x2\x2\x10E\x10F");
		sb.Append("\x3\x2\x2\x2\x10F>\x3\x2\x2\x2\x110\x112\a\x30\x2\x2\x111\x113");
		sb.Append("\x5\x39\x1D\x2\x112\x111\x3\x2\x2\x2\x113\x114\x3\x2\x2\x2\x114");
		sb.Append("\x112\x3\x2\x2\x2\x114\x115\x3\x2\x2\x2\x115@\x3\x2\x2\x2\x116");
		sb.Append("\x118\t\x6\x2\x2\x117\x119\t\a\x2\x2\x118\x117\x3\x2\x2\x2\x118");
		sb.Append("\x119\x3\x2\x2\x2\x119\x11B\x3\x2\x2\x2\x11A\x11C\x5\x39\x1D");
		sb.Append("\x2\x11B\x11A\x3\x2\x2\x2\x11C\x11D\x3\x2\x2\x2\x11D\x11B\x3");
		sb.Append("\x2\x2\x2\x11D\x11E\x3\x2\x2\x2\x11E\x42\x3\x2\x2\x2\x11F\x125");
		sb.Append("\x5\x37\x1C\x2\x120\x124\x5\x37\x1C\x2\x121\x124\x5\x39\x1D");
		sb.Append("\x2\x122\x124\a\x61\x2\x2\x123\x120\x3\x2\x2\x2\x123\x121\x3");
		sb.Append("\x2\x2\x2\x123\x122\x3\x2\x2\x2\x124\x127\x3\x2\x2\x2\x125\x123");
		sb.Append("\x3\x2\x2\x2\x125\x126\x3\x2\x2\x2\x126\x44\x3\x2\x2\x2\x127");
		sb.Append("\x125\x3\x2\x2\x2\x128\x129\a&\x2\x2\x129\x12A\x5=\x1F\x2\x12A");
		sb.Append("\x12B\x5=\x1F\x2\x12B\x12C\x5=\x1F\x2\x12C\x12D\x5=\x1F\x2\x12D");
		sb.Append("\x12E\x5=\x1F\x2\x12E\x12F\x5=\x1F\x2\x12F\x130\x5=\x1F\x2\x130");
		sb.Append("\x131\x5=\x1F\x2\x131\x46\x3\x2\x2\x2\x132\x138\a)\x2\x2\x133");
		sb.Append("\x134\a^\x2\x2\x134\x137\a)\x2\x2\x135\x137\n\b\x2\x2\x136\x133");
		sb.Append("\x3\x2\x2\x2\x136\x135\x3\x2\x2\x2\x137\x13A\x3\x2\x2\x2\x138");
		sb.Append("\x136\x3\x2\x2\x2\x138\x139\x3\x2\x2\x2\x139\x13B\x3\x2\x2\x2");
		sb.Append("\x13A\x138\x3\x2\x2\x2\x13B\x13C\a)\x2\x2\x13CH\x3\x2\x2\x2");
		sb.Append("\x13D\x142\a$\x2\x2\x13E\x141\a$\x2\x2\x13F\x141\n\t\x2\x2\x140");
		sb.Append("\x13E\x3\x2\x2\x2\x140\x13F\x3\x2\x2\x2\x141\x144\x3\x2\x2\x2");
		sb.Append("\x142\x140\x3\x2\x2\x2\x142\x143\x3\x2\x2\x2\x143\x145\x3\x2");
		sb.Append("\x2\x2\x144\x142\x3\x2\x2\x2\x145\x146\a$\x2\x2\x146J\x3\x2");
		sb.Append("\x2\x2\x147\x149\t\a\x2\x2\x148\x147\x3\x2\x2\x2\x148\x149\x3");
		sb.Append("\x2\x2\x2\x149\x14B\x3\x2\x2\x2\x14A\x14C\x5\x39\x1D\x2\x14B");
		sb.Append("\x14A\x3\x2\x2\x2\x14C\x14D\x3\x2\x2\x2\x14D\x14B\x3\x2\x2\x2");
		sb.Append("\x14D\x14E\x3\x2\x2\x2\x14EL\x3\x2\x2\x2\x14F\x151\t\a\x2\x2");
		sb.Append("\x150\x14F\x3\x2\x2\x2\x150\x151\x3\x2\x2\x2\x151\x163\x3\x2");
		sb.Append("\x2\x2\x152\x154\x5\x39\x1D\x2\x153\x152\x3\x2\x2\x2\x154\x157");
		sb.Append("\x3\x2\x2\x2\x155\x153\x3\x2\x2\x2\x155\x156\x3\x2\x2\x2\x156");
		sb.Append("\x158\x3\x2\x2\x2\x157\x155\x3\x2\x2\x2\x158\x15A\x5? \x2\x159");
		sb.Append("\x15B\x5\x41!\x2\x15A\x159\x3\x2\x2\x2\x15A\x15B\x3\x2\x2\x2");
		sb.Append("\x15B\x164\x3\x2\x2\x2\x15C\x15E\x5\x39\x1D\x2\x15D\x15C\x3");
		sb.Append("\x2\x2\x2\x15E\x15F\x3\x2\x2\x2\x15F\x15D\x3\x2\x2\x2\x15F\x160");
		sb.Append("\x3\x2\x2\x2\x160\x161\x3\x2\x2\x2\x161\x162\x5\x41!\x2\x162");
		sb.Append("\x164\x3\x2\x2\x2\x163\x155\x3\x2\x2\x2\x163\x15D\x3\x2\x2\x2");
		sb.Append("\x164N\x3\x2\x2\x2\x17\x2\xFA\x104\x109\x10E\x114\x118\x11D");
		sb.Append("\x123\x125\x136\x138\x140\x142\x148\x14D\x150\x155\x15A\x15F");
		sb.Append("\x163\x3\b\x2\x2");
	    return sb.ToString();
	}

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());


}
} // namespace QbScript.Language
